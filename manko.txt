Otthoni munka:
terminal - 
	express .
	cd .
	npm i
	npm i --save pug
app.js - 14 row app.set('view engine', 'pug'); jade-ről
views - fájlkiterjesztések .jade -> .pug
routes mappa -> api.js   index.js tartalmát az api.js-be másolni
app.js -> app.use-be vegyük fel az api.js-t 26. row    app.use('/api', require('./routes/api'));
új mappa gyökérbe -> db -> bele új json file: user.json -> file tartalma üres tömb []
api.js -> 
	const fs = require('fs');
	const path = require('path');

	const dbPath = '../db';
and so on...


//Ezek saját ötletek:
//az id generátorban lehet ellenőrzés hogy létezik-e már az ID, vagy lehet benne indexelést létrehozó method
//error handlingben lehetne kiolvasó a statusCode-hoz

Feladat: a rendszer legyen képes kapcsolt táblás keresésre is (opcionális/extra)
	az angular frontend segítségével lehessen elvégezni az összes CRUD műveletet
	legalább 5 féle adattípust kezeljen (5 collection -> user, order, stb, minden connection külön json fájlban van, úgy mint a webfueles apiban)
